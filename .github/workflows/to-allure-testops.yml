name: upload-to-allure-testops

on:
  # push:
  workflow_dispatch:
    inputs:
      TEST_ENDPOINT:
        description: "Endpoint for tests"
        required: true
        default: https://testing.qatools.cloud
      ALLURE_JOB_RUN_ID:
        description: "ALLURE_JOB_RUN_ID service parameter. Leave blank."
        required: false
      ALLURE_USERNAME:
        description: "ALLURE_USERNAME service parameter. Leave blank"
        required: false

env:
  ALLURE_TESTPLAN_PATH: "./testplan.json"
  ALLURE_RESULTS: "allure-results"
  ALLURE_ENDPOINT: https://testing.qatools.cloud/
  ALLURE_PROJECT_ID: 1605
  ALLURE_TOKEN: 67aad6fa-966a-49ef-a598-e572b3e030f9

jobs:
  all-tests:
    runs-on: windows-latest  # NUnit обычно используется в .NET среде, поэтому Windows runner
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'  # или актуальная версия .NET

      - name: Install dependencies
        run: dotnet restore

      - name: install and configure allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: ${{ secrets.ALLURE_ENDPOINT }}
          allure-token: ${{ secrets.ALLURE_TOKEN }}
          allure-project-id: ${{ secrets.ALLURE_PROJECT_ID }}

      - name: Run NUnit tests
        run: |
          dotnet test --logger:"trx;LogFileName=testresults.trx" --results-directory:./TestResults
          # Конвертация результатов TRX в Allure (может потребоваться дополнительный инструмент)
          # Например, используя Allure.TrxLogger или аналогичный конвертер
          allurectl watch -- allure generate ./TestResults -o ${ALLURE_RESULTS}
        env:
          TEST_ENDPOINT: ${{ github.event.inputs.TEST_ENDPOINT }}
          TEST_BROWSER: ${{ github.event.inputs.TEST_BROWSER }}
          ALLURE_TESTPLAN_PATH: "./testplan.json"
          ALLURE_RESULTS: "allure-results"
      
